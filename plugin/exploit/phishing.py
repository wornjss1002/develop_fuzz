from typing import Optional, Dict

from data_models import FinalReportData, ExploitScenario, IExploitCheck

class Phishing(IExploitCheck):
    def check(self, data: FinalReportData, callback_server: str) -> Optional[ExploitScenario]:
        csp_rules: Dict[str, str] = data.defenses.csp_rules
        allows_navigation = False
        
        if csp_rules:
            nav_sources = csp_rules.get('navigate-to', csp_rules.get('default-src', ''))
            
            if '*' in nav_sources.split():
                allows_navigation = True
                des = "CSP의 'navigate-to'에 와일드카드가 있어 모든 외부 URL로 이동 가능합니다."
            else:
                allows_navigation = False
                des = f"CSP의 'navigate-to' ('{nav_sources}') 정책으로 {callback_server} 이동이 차단됩니다."
        else:
            allows_navigation = True

        if not allows_navigation:
            return ExploitScenario(
                scenario_name="피싱",
                is_possible=False,
                des=des
            )

        poc_code = f"location.href = '{callback_server}';"

        return ExploitScenario(
            scenario_name="피싱",
            is_possible=True,
            des=des,
            poc_code=poc_code
        )

