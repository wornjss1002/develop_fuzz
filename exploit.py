from typing import List, Optional
from data_models import (
    FinalReportData, FinalExploitReport, IExploitCheck, CookieInfo,
    DefenseAnalysis, AttackResult, InjectionPoint, PageContext,
    ExploitScenario
)
from plugin.exploit.cookie_leak import CookieLeak
from plugin.callback import send_data

class XssExploitModule:
    def __init__(self, callback_server_url: str):
        self.callback_server = callback_server_url
        self.checkers: List[IExploitCheck] = [
            CookieLeak(),
        ]
        print(f"[+] 익스플로잇 모듈: {len(self.checkers)}개의 시나리오 플러그인 로드 완료.")

    def analyze_and_report(self, data: FinalReportData) -> FinalExploitReport:
        all_scenarios = []
        csp_rules = data.defenses.csp_rules

        for checker in self.checkers:
            scenario_result = checker.check(data, self.callback_server)

            if not scenario_result:
                continue
            
            if scenario_result.is_possible and scenario_result.raw:
                raw_data = scenario_result.raw
                final_poc = send_data(
                    csp_rules=csp_rules,
                    raw_data=raw_data,
                    callback_server=self.callback_server
                )
                
                if final_poc:
                    scenario_result.scenario_name = f"{scenario_result.scenario_name}"
                    scenario_result.des = f"{scenario_result.des}"
                    scenario_result.poc_code = final_poc

                else:
                    scenario_result.is_possible = False
                    scenario_result.des = f"시나리오 진행 불가"
                    scenario_result.poc_code = None
            
            all_scenarios.append(scenario_result)
        
        payload = data.result.successful_payload if data.result.successful_payload else "N/A"
        
        final_report = FinalExploitReport(
            injection_point=data.point,
            successful_payload=payload,
            scenarios=all_scenarios
        )
        
        return final_report