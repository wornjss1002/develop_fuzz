from typing import Optional, Dict, List
from data_models import FinalReportData, ExploitScenario, IExploitCheck, CookieInfo

class CookieLeak(IExploitCheck):
    def check(self, data: FinalReportData, callback_server: str) -> Optional[ExploitScenario]:        
        all_cookies: List[CookieInfo] = data.defenses.all_cookies
        csp_rules = data.defenses.csp_rules
        if not all_cookies:
            return None
        # --- 2. 탈취 가능한 쿠키와 보호되는 쿠키를 분류 ---
        leakable_cookies = [c.name for c in all_cookies if not c.has_httponly]
        protected_cookies = [c.name for c in all_cookies if c.httponly]

        # --- 3. 탈취 가능한 쿠키가 단 하나도 없는 경우 (완벽 방어) ---
        if not leakable_cookies:
            return ExploitScenario(
                scenario_name="쿠키 탈취 (세션 하이재킹)",
                is_possible=False,
                severity="Info",
                reason=f"모든 쿠키({protected_cookies})에 'HttpOnly' 플래그가 설정되어 탈취할 수 없습니다."
            )

        # --- 4. 탈취는 가능하지만 CSP가 전송을 막는 경우 ---
        if not self._CSP_check(csp_rules, callback_server):
            return ExploitScenario(
                scenario_name="쿠키 탈취 (세션 하이재킹)",
                is_possible=False,
                severity="Info",
                reason=(f"탈취 가능한 쿠키({leakable_cookies})가 존재하지만, "
                        f"CSP 정책이 콜백 서버로의 데이터 전송을 차단합니다.")
            )
        
        # 상세한 분석 내용을 description에 추가
        description = (f"HttpOnly로 보호된 쿠키: {protected_cookies}\n")

        return ExploitScenario(
            scenario_name="쿠키 탈취 (세션 하이재킹)",
            is_possible=True,
            severity="Medium",
            reason=description,
            poc_code=poc_code
        )

    # --- 6. 이 클래스 내부에서만 사용하는 헬퍼 메서드 ---
    
    def _csp_check(self, csp: Dict[str, str], callback_server: str) -> bool:
        """
        탈취한 쿠키를 외부 서버로 전송할 수 있는지 CSP 정책을 검사합니다.
        (img-src는 new Image() 방식, connect-src는 fetch/XHR 방식)
        """
        if not csp:
            return True # CSP 자체가 없으면 무조건 가능

        # 'img-src'나 'connect-src' 정책을 확인
        allowed_sources = csp.get('img-src', '') + " " + csp.get('connect-src', '')
        
        # 정책에 와일드카드('*')가 있거나, 콜백 서버의 호스트가 포함되어 있으면 통과
        if "*" in allowed_sources or callback_server in allowed_sources:
            return True
            
        return False

